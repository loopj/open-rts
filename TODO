# TODO
- misc
	- rename .h to .hpp in cpp bindings
	- cpp namespace
- cmake branch
	- Figure out non-platformio unit testing, create github action
	- Build arduino example apps in new github action
	- Build espidf example apps in new github action
	- Build raspberry pi example apps in new github action
- ookradio library
	- Document library
	- Allow building standalone with cmake
	- Decide if we should break out / publish separately
	- Add support for cc1100
- Documentation
	- Talk about / link to example apps in the docs
	- Better documentation of supported platforms
	- Document build flags
	- Write "getting started" docs for each platform?
- Publish
	- Publish to arduinio library manager
		- https://github.com/arduino/library-registry/blob/main/README.md#adding-a-library-to-library-manager
	- Publish to ESP-IDF component registry
		- https://components.espressif.com/
	- Publish to platformio registry
	- Publish to conan?
- Announce
	- Link from loopj.com
	- Reply to old comment threads, stack overflows, etc
	- Reply to old tweets
	- Tweet





# Random notes


# Install arduino cli

arduino-cli config init \
	--additional-urls https://adafruit.github.io/arduino-board-index/package_adafruit_index.json \
	--additional-urls https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json

arduino-cli core install arduino:avr adafruit:avr adafruit:samd esp32:esp32

# Build example on esp32
arduino-cli compile \
	--fqbn esp32:esp32:sparkfun_lora_gateway_1-channel \
	--build-property compiler.cpp.extra_flags="-DOPENRTS_BOARD_SPARKFUN_LORA_GATEWAY" \
	--library="$PWD" \
	examples/arduino/sniffer

# Build example on avr
arduino-cli compile \
	--fqbn adafruit:avr:feather32u4 \
	--build-property compiler.cpp.extra_flags="-DOPENRTS_BOARD_ADAFRUIT_32U4_RFM69" \
	--library="$PWD" \
	examples/arduino/sniffer

# Build example on samd
arduino-cli compile \
	--fqbn adafruit:samd:adafruit_feather_m0 \
	--build-property compiler.cpp.extra_flags="-DOPENRTS_BOARD_ADAFRUIT_M0_RFM69" \ ADAFRUIT_FEATHER_M0
	--library="$PWD" \
	examples/arduino/sniffer


# Build an ESP-IDF example using docker
docker run --rm -v $PWD:/project -w /project -u `id -u`:`id -g` espressif/idf:release-v4.4 idf.py build --project-dir examples/espidf/sniffer

# GitHub Action for setting up Arduino CLI
https://github.com/marketplace/actions/setup-arduino-cli

# GitHub Action for building ESP-IDF project
https://github.com/marketplace/actions/espressif-iot-development-framework-esp-idf



# pio run
arduino-cli compile \
	--fqbn esp32:esp32:sparkfun_lora_gateway_1-channel \
	--build-property compiler.cpp.extra_flags="-DOPENRTS_BOARD_SPARKFUN_LORA_GATEWAY" \
	--library="$PWD" \
	examples/arduino/sniffer

# pio run -t upload
arduino-cli compile \
	--fqbn esp32:esp32:sparkfun_lora_gateway_1-channel \
	--build-property compiler.cpp.extra_flags="-DOPENRTS_BOARD_SPARKFUN_LORA_GATEWAY" \
	--library="$PWD" \
	--upload \
	--port /dev/ttyUSB0 \
	examples/arduino/sniffer

# pio device monitor
arduino-cli monitor -p /dev/ttyUSB0 -c baudrate=115200